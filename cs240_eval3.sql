CREATE TABLE SALES_PEOPLE (
    S_NUM INT PRIMARY KEY,
    S_NAME VARCHAR(50),
    CITY VARCHAR(50),
    COMM DECIMAL(4,2)
);

CREATE TABLE CUSTOMERS (
    C_NUM INT PRIMARY KEY,
    C_NAME VARCHAR(50),
    CITY VARCHAR(50),
    RATING INT,
    S_NUM INT,
    FOREIGN KEY (S_NUM) REFERENCES SALES_PEOPLE(S_NUM)
);

CREATE TABLE ORDERS (
    O_NUM INT PRIMARY KEY,
    AMT INT,
    ORDER_DATE DATE,
    C_NUM INT,
    S_NUM INT,
    FOREIGN KEY (S_NUM) REFERENCES SALES_PEOPLE(S_NUM)  
);

INSERT INTO SALES_PEOPLE VALUES
(1001, 'Jessica', 'London', 0.12),
(1002, 'Robert', 'SanJose', 0.13),
(1003, 'Alex', 'London', 0.11),
(1004, 'Mathew', 'Barcelona', 0.15),
(1007, 'Rihana', 'New York', 0.10);

INSERT INTO CUSTOMERS VALUES
(2001, 'Hoffman', 'London', 100, 1001),
(2002, 'Tiffiany', 'Rome', 150, 1003),
(2003, 'Liu', 'SanJose', 200, 1002),
(2004, 'Thomas', 'Berlin', 300, 1002),
(2006, 'Clara', 'London', 400, 1001),
(2008, 'Ariana', 'SanJose', 300, 1007),
(2007, 'Duke', 'Rome', 100, 1004);

INSERT INTO ORDERS VALUES
(3001, 1860, '2024-01-03', 2008, 1007),
(3003, 7670, '2022-07-03', 2001, 1001),
(3002, 0, '2024-01-03', 2009, 1004),
(3005, 5160, '2023-10-03', 2003, 1007),
(3006, 1095, '2023-10-03', 2008, 1007),
(3009, NULL, '2024-01-04', 2002, 1003),
(3007, 5570, '2024-01-04', 2005, 1007),
(3008, 4723, '2023-10-05', 2006, 1002),
(3010, NULL, '2022-07-06', 2004, 1004),
(3011, 1095, '2022-03-05', 2006, 1007);

// 1
UPDATE CUSTOMERS
SET CITY = 'Texas'
WHERE C_NAME = 'Liu';

// 2
DELETE FROM ORDERS
WHERE ORDER_DATE < '2022-06-15';

// 3
SELECT DISTINCT 
    S.S_NUM,
    S.S_NAME,
    C.C_NUM,
    C.C_NAME
FROM 
    SALES_PEOPLE S
    JOIN ORDERS O ON S.S_NUM = O.S_NUM
    JOIN CUSTOMERS C ON C.C_NUM = O.C_NUM
WHERE 
    (SELECT AVG(O2.AMT) 
     FROM ORDERS O2 
     WHERE O2.S_NUM = S.S_NUM 
     AND O2.C_NUM = C.C_NUM 
     AND O2.AMT IS NOT NULL) > 
    (SELECT AVG(AMT) 
     FROM ORDERS 
     WHERE AMT IS NOT NULL);

// 4
SELECT
    S.S_NUM,
    S.S_NAME,
    C.C_NUM,
    C.C_NAME
FROM
    SALES_PEOPLE S
    CROSS JOIN CUSTOMERS C
WHERE
    S.CITY = C.CITY;

// 5
SELECT DISTINCT 
    S.S_NUM,
    S.S_NAME,
    S.COMM
FROM 
    SALES_PEOPLE S
    JOIN CUSTOMERS C ON S.CITY = C.CITY
WHERE 
    S.S_NUM IN (
        SELECT S_NUM 
        FROM ORDERS 
        GROUP BY S_NUM 
        HAVING COUNT(*) > 3
    );

// 6
SELECT
    S.*,
    C.*
FROM
    SALES_PEOPLE S
    CROSS JOIN CUSTOMERS C;

// 7
SELECT
    S.S_NUM,
    S.S_NAME,
    C.C_NUM,
    C.C_NAME,
    C.CITY
FROM
    SALES_PEOPLE S
    JOIN CUSTOMERS C ON S.S_NUM = C.S_NUM;

// 8
CREATE VIEW HUIT AS
SELECT 
    S.S_NAME,
    COUNT(O.O_NUM) AS TOTAL_ORDERS,
    AVG(O.AMT) AS AVERAGE_ORDER_AMOUNT,
    SUM(O.AMT) AS TOTAL_ORDER_AMOUNT
FROM 
    SALES_PEOPLE S
    LEFT JOIN ORDERS O ON S.S_NUM = O.S_NUM
WHERE 
    O.AMT IS NOT NULL
GROUP BY 
    S.S_NAME;

// 9
CREATE VIEW NEUF AS
SELECT DISTINCT
    S.S_NUM,
    S.S_NAME
FROM
    SALES_PEOPLE S
    JOIN CUSTOMERS C ON C.S_NUM = S.S_NUM
GROUP BY
    S.S_NUM,
    S.S_NAME
HAVING
    COUNT(*) > 1;